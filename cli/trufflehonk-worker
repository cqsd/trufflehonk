#!/usr/bin/env python3
import os
import sys

import requests

from trufflehonk import queues
from trufflehonk.jobs import trufflehog, pydriller
from trufflehonk.utils import git, s3_files


def honk_git_cmd(args):
    for repo_url in queues.SqsQueue(args.sqs.queue_url):
        secrets, authors = honk_git(repo_url, args.s3_files_bucket)
        post_webhook(args.webhook_url, 'secret', repo_url, secrets)
        post_webhook(args.webhook_url, 'email', repo_url, authors)


def honk_git(repo_url, s3_files_bucket):
    print(f'processing {repo_url}', file=sys.stderr)
    with s3_files.S3Dir(s3_files_bucket, git.to_gopath(repo_url)) as repo_path:
        secrets = trufflehog.find_secrets(repo_url, repo_path)
        authors = pydriller.find_authors(repo_url, repo_path)
    return secrets, authors


# TODO
def post_webhook(url, kind, source, data):
    requests.post(url, json={'kind': kind, 'source': source, data: data})


if __name__ == '__main__':
    import argparse

    parser = argparse.ArgumentParser('trufflehonk-worker')
    parser.set_defaults(func=None)

    subparsers = parser.add_subparsers(title='subcommands')

    sqs_queue_url = os.getenv('TRUFFLEHONK_QUEUE_SQS_URL')
    s3_files_bucket = os.getenv('TRUFFLEHONK_S3_FILES_BUCKET_NAME')
    webhook_url = os.getenv('TRUFFLEHONK_WEBHOOK_URL')

    honk_subparser = subparsers.add_parser('start')
    honk_subparser.add_argument('--sqs-queue-url', default=sqs_queue_url)
    honk_subparser.add_argument('--s3-files-bucket', default=s3_files_bucket)
    honk_subparser.add_argument('--webhook-url', default=webhook_url)
    honk_subparser.set_defaults(func=honk_git_cmd)

    args = parser.parse_args()

    if args.func:
        args.func(args)
    else:
        parser.print_usage()
