#!/usr/bin/env python3
import os
import sys
import tempfile

from trufflehonk.jobs import trufflehog, pydriller
from trufflehonk.utils import data, git, github


def honk_github(org, repos=None, clone_dir=None, user=False, rules_file=None):
    secrets = []
    authors = dict()

    # we want to clone all the repos into one dir
    # if clone_dir is not specified, use a temporary diwectowy
    tempdir = None
    if not clone_dir:
        tempdir = tempfile.TemporaryDirectory()
        tempdir.name
        print(
            f'cloning repos into temporary directory {tempdir.name}',
            file=sys.stderr
        )
        clone_dir = tempdir.name

    if not repos:
        repos = github.get_org_repos(org, user)

    for repo in repos:
        try:
            repo_url = f'https://github.com/{org}/{repo}'
            repo_path = os.path.join(clone_dir, git.to_gopath(repo_url))
            git.clone(repo_url, repo_path)

            print(f'processing {repo_url}', file=sys.stderr)

            _secrets = trufflehog.find_secrets(repo_path, repo_url, rules_file)
            _authors = pydriller.find_authors(repo_path)

            secrets += _secrets
            data.update_dict_sets(authors, _authors)
        except KeyboardInterrupt:
            break

    print('============ repos scanned ==============')
    print('\n'.join([f'{org}/{repo}' for repo in repos]))
    print()
    print('------------ secrets --------------------')
    print(trufflehog.to_human_string(secrets))
    print('------------ authors --------------------')
    print(pydriller.to_human_string(authors))


def honk_github_cmd(args):
    honk_github(args.org, args.repos, args.clone_dir, args.user, args.rules_file)


def commastring(s):
    return s.split(',')


if __name__ == '__main__':
    import argparse

    parser = argparse.ArgumentParser('trufflehonk')
    parser.set_defaults(func=None)

    subparsers = parser.add_subparsers(title='subcommands')

    honk_subparser = subparsers.add_parser('honk', aliases=['scan'])
    honk_subparser.add_argument('org', metavar='NAME', help='name of org or user')
    honk_subparser.add_argument('--repos', help='comma-separated list of repos', type=commastring, default=None)
    honk_subparser.add_argument('--user', help='set if the username belongs to a user (github api limitation)', action='store_true', default=False)
    honk_subparser.add_argument('--clone-dir', help='basedir to clone into', default=None)
    honk_subparser.add_argument('--rules-file', help='trufflehog rules file', default=None)
    honk_subparser.add_argument('--no-cumulative', help='don\'t print a cumulative report (output each repo separately)', default=False)
    honk_subparser.set_defaults(func=honk_github_cmd)

    args = parser.parse_args()

    if args.func:
        args.func(args)
    else:
        parser.print_usage()
